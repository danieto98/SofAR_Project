<launch>
  <!--Start the freenect_camera driver-->
    <arg name="device_id" default="#1" />
  <include file="$(find freenect_launch)/launch/freenect.launch" >
    <arg name="depth_registration" value="true" />
    <arg name="device_id" value="$(arg device_id)" />
  </include>

    <node pkg="tf" type="static_transform_publisher" name="camera_link_pub" args="0 0 0 -0.6087614 0 0 0.7933533 base_link camera_rgb_optical_frame 100" />

  <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <remap from="rgb/image"        to="/camera/rgb/image_rect_color"/>
      <remap from="depth/image"      to="/camera/depth_registered/image_raw"/>
      <remap from="rgb/camera_info"  to="/camera/rgb/camera_info"/>
      <remap from="rgbd_image"       to="rgbd_image"/> <!-- output -->

      <!-- Should be true for not synchronized camera topics
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="true"/>
    </node>

    <!-- Odometry -->
    <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <param name="subscribe_rgbd" type="bool"   value="true"/>
      <param name="frame_id"       type="string" value="base_link"/>
      <remap from="rgbd_image" to="rgbd_image"/>
    </node>

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id"        type="string" value="base_link"/>
          <param name="subscribe_depth" type="bool"   value="false"/>
          <param name="subscribe_rgbd"  type="bool"   value="true"/>

          <remap from="odom"       to="odom"/>
          <remap from="rgbd_image" to="rgbd_image"/>

          <param name="queue_size"  type="int"  value="10"/>
          <param name="approx_sync" type="bool" value="false"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Grid/FromDepth" type="string" value="true"/>
          <param name="Reg/Strategy" type="string" value="0"/>
    </node>

    <!--Start the command_recognition node to listen for voice commands-->
    <node name="command_recognition" pkg="labeled_slam" type="command_recognition.py" output="screen" launch-prefix="xterm -e" />

    <!--Start the logic node-->
    <node name="logic" pkg="labeled_slam" type="logic_node" />

    <!--Start the activators-->
    <node name="activator1" pkg="labeled_slam" type="activator1_node" />
    <node name="activator2" pkg="labeled_slam" type="activator2_node" />

    <!--Start the velocity forwarder-->
    <node name="velocity_forwarder" pkg="labeled_slam" type="velocity_forwarder" />

    <!--Start the path follower-->
    <node name="path_follower" pkg="labeled_slam" type="path_follower_node" />

    <!--Start the gesture-based controller node to control the robot with the watch-->
    <include file="$(find gesture_based_controller)/launch/hrp_gb_controller.launch">
        <!--Subscribe to IMU data from the smartwatch-->
        <arg name="inertial_sub_topic" value="/G_Watch_R_5567/imu_data" />
        <!--Change the published velocity topic so that it is captured by the activator and not sent directly to the Husqvarna driver-->
        <arg name="vel_pub_topic"  value="/gbc/cmd_vel" />
    </include>
</launch>
